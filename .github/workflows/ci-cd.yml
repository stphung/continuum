name: Continuum CI/CD

on:
  push:
    branches: [ main, develop ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]

env:
  GODOT_VERSION: 4.4.1
  EXPORT_NAME: continuum

jobs:
  export-linux:
    name: Linux Export
    runs-on: ubuntu-22.04
    container:
      image: barichello/godot-ci:4.4.1
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          lfs: true

      - name: Setup
        run: |
          mkdir -v -p ~/.local/share/godot/export_templates/
          mv /root/.local/share/godot/export_templates/${GODOT_VERSION}.stable ~/.local/share/godot/export_templates/${GODOT_VERSION}.stable

      - name: Import project assets
        run: |
          godot --path . --headless --import --quit-after 1 || true

      - name: Linux Build
        run: |
          mkdir -v -p build/linux
          godot --headless --verbose --export-release "Desktop" build/linux/$EXPORT_NAME.x86_64

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: linux
          path: build/linux

  export-windows:
    name: Windows Export
    runs-on: ubuntu-22.04
    container:
      image: barichello/godot-ci:4.4.1
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          lfs: true

      - name: Setup
        run: |
          mkdir -v -p ~/.local/share/godot/export_templates/
          mv /root/.local/share/godot/export_templates/${GODOT_VERSION}.stable ~/.local/share/godot/export_templates/${GODOT_VERSION}.stable

      - name: Import project assets
        run: |
          godot --path . --headless --import --quit-after 1 || true

      - name: Windows Build
        run: |
          mkdir -v -p build/windows
          godot --headless --verbose --export-release "Windows Desktop" build/windows/$EXPORT_NAME.exe

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: windows
          path: build/windows

  export-web:
    name: Web Export
    runs-on: ubuntu-22.04
    container:
      image: barichello/godot-ci:4.4.1
    permissions:
      contents: read
      pages: write
      id-token: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          lfs: true

      - name: Setup
        run: |
          mkdir -v -p ~/.local/share/godot/export_templates/
          mv /root/.local/share/godot/export_templates/${GODOT_VERSION}.stable ~/.local/share/godot/export_templates/${GODOT_VERSION}.stable

      - name: Import project assets
        run: |
          godot --path . --headless --import --quit-after 1 || true

      - name: Web Build
        run: |
          mkdir -v -p build/web
          godot --headless --verbose --export-release "Web" build/web/index.html

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: web
          path: build/web

      - name: Setup Pages
        uses: actions/configure-pages@v4
        if: github.ref == 'refs/heads/main'

      - name: Upload to GitHub Pages
        uses: actions/upload-pages-artifact@v3
        if: github.ref == 'refs/heads/main'
        with:
          path: build/web

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
        if: github.ref == 'refs/heads/main'

  export-android:
    name: Android Export
    runs-on: ubuntu-22.04
    container:
      image: barichello/godot-ci:4.4.1
    env:
      GODOT_VERSION: 4.4.1
      EXPORT_NAME: continuum
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          lfs: true

      - name: Setup
        run: |
          mkdir -v -p ~/.local/share/godot/export_templates/
          mv /root/.local/share/godot/export_templates/${GODOT_VERSION}.stable ~/.local/share/godot/export_templates/${GODOT_VERSION}.stable

      - name: Install Android Build Template
        run: |
          # Backup existing android directory
          if [ -d "android" ]; then
            mv android android.backup
          fi
          # Extract fresh android template to correct location
          mkdir -p android/build
          unzip -q ~/.local/share/godot/export_templates/${GODOT_VERSION}.stable/android_source.zip -d android/build

      - name: Configure Godot Android Settings
        run: |
          # Create debug keystore first
          keytool -genkey -v -keystore /tmp/debug.keystore \
            -alias androiddebugkey \
            -keyalg RSA -keysize 2048 -validity 10000 \
            -storepass android -keypass android \
            -dname "CN=Android Debug,O=Android,C=US"

          # Create Godot editor settings directory
          mkdir -p ~/.config/godot

          # Configure Godot editor settings for Android
          cat > ~/.config/godot/editor_settings-4.4.tres << 'EOF'
          [gd_resource type="EditorSettings" load_steps=1 format=3]
          [resource]
          export/android/android_sdk_path = "/usr/lib/android-sdk"
          export/android/java_sdk_path = "/usr/lib/jvm/java-17-openjdk-amd64"
          export/android/debug_keystore = "/tmp/debug.keystore"
          export/android/debug_keystore_pass = "android"
          export/android/debug_keystore_user = "androiddebugkey"
          export/android/force_system_user = false
          export/android/timestamping_authority_url = ""
          export/android/shutdown_adb_on_exit = true
          export/android/android_build_tools_ver = "33.0.2"
          EOF

      - name: Import project assets
        run: |
          godot --path . --headless --import --quit-after 1 || true
          cat export_presets.cfg | grep -A 5 -B 5 "custom_template"

      - name: Verify Android Environment
        run: |
          echo "=== Java SDK Information ==="
          echo "JAVA_HOME: $JAVA_HOME"
          which java
          java -version
          echo "Available Java installations:"
          find /usr/lib/jvm -type d -name "java-*" 2>/dev/null || echo "No JVM directory found"
          echo "Checking for OpenJDK 17:"
          ls -la /usr/lib/jvm/java-17-openjdk-amd64 2>/dev/null || echo "Java 17 path not found"

          echo "=== Android SDK Information ==="
          echo "ANDROID_HOME: $ANDROID_HOME"
          ls -la $ANDROID_HOME/ || echo "ANDROID_HOME directory not found"
          ls -la $ANDROID_HOME/build-tools/ || echo "build-tools directory not found"

          echo "=== Available Build Tools Versions ==="
          find $ANDROID_HOME -name "build-tools" -type d -exec ls -la {} \; || echo "No build-tools found"

          echo "=== Keystore Information ==="
          ls -la /tmp/debug.keystore

          echo "=== Godot Editor Settings ==="
          cat ~/.config/godot/editor_settings-4.4.tres

      - name: Android Build
        run: |
          mkdir -v -p build/android

          # Temporarily move test files to prevent parsing errors during Android export
          echo "=== Temporarily moving test files ==="
          if [ -d "test" ]; then
            mv test test_backup
            echo "Test files moved to test_backup"
          fi

          echo "=== Attempting APK Export ==="
          # Export with debug configuration with maximum verbosity
          godot --headless --verbose --export-debug "Android" build/android/$EXPORT_NAME.apk

          # Restore test files after export
          if [ -d "test_backup" ]; then
            mv test_backup test
            echo "Test files restored"
          fi

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: android
          path: build/android

  create-release:
    name: Create Release
    runs-on: ubuntu-22.04
    if: startsWith(github.ref, 'refs/tags/v')
    needs: [export-linux, export-windows, export-web, export-android]
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download Linux Build
        uses: actions/download-artifact@v4
        with:
          name: linux
          path: ./artifacts/linux

      - name: Download Windows Build
        uses: actions/download-artifact@v4
        with:
          name: windows
          path: ./artifacts/windows

      - name: Download Web Build
        uses: actions/download-artifact@v4
        with:
          name: web
          path: ./artifacts/web

      - name: Download Android Build
        uses: actions/download-artifact@v4
        with:
          name: android
          path: ./artifacts/android

      - name: Create Release Archives
        run: |
          cd artifacts
          zip -r ../continuum-linux-${GITHUB_REF#refs/tags/}.zip linux/
          zip -r ../continuum-windows-${GITHUB_REF#refs/tags/}.zip windows/
          zip -r ../continuum-web-${GITHUB_REF#refs/tags/}.zip web/
          zip -r ../continuum-android-${GITHUB_REF#refs/tags/}.zip android/

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            continuum-linux-*.zip
            continuum-windows-*.zip
            continuum-web-*.zip
            continuum-android-*.zip
          body: |
            ## üéÆ Continuum Release ${GITHUB_REF#refs/tags/}

            **Professional vertical scrolling shmup built in Godot 4.4**

            ### üöÄ Play Options
            - **üåê Web**: [Play Online](https://stphung.github.io/continuum/) (Instant browser play)
            - **üêß Linux**: Download `continuum-linux-*.zip`
            - **ü™ü Windows**: Download `continuum-windows-*.zip`
            - **üì± Android**: Download `continuum-android-*.zip` (contains APK file)
            - **üåê Web Offline**: Download `continuum-web-*.zip` for local hosting

            ### ‚ú® Features
            - **Dual Weapon System**: Vulcan spread + Laser piercing with 5-level progression
            - **Zero-Dependency Audio**: All sounds generated programmatically
            - **Dynamic Difficulty**: Mathematical wave progression scaling
            - **Professional Architecture**: Clean code with comprehensive testing

            ### üéØ Controls
            - **Movement**: Arrow Keys or WASD
            - **Shoot**: Spacebar (automatic)
            - **Bomb**: Z key
            - **Pause**: Escape

            Built with modern game development practices and innovative technical solutions.
          draft: false
          prerelease: false