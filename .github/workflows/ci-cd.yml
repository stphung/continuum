name: Continuum CI/CD

on:
  push:
    branches: [ main, develop ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]

env:
  GODOT_VERSION: 4.4.1
  EXPORT_NAME: continuum

jobs:
  export-linux:
    name: Linux Export
    runs-on: ubuntu-22.04
    container:
      image: barichello/godot-ci:4.4.1
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          lfs: true

      - name: Setup
        run: |
          mkdir -v -p ~/.local/share/godot/export_templates/
          mv /root/.local/share/godot/export_templates/${GODOT_VERSION}.stable ~/.local/share/godot/export_templates/${GODOT_VERSION}.stable

      - name: Import project assets
        run: |
          godot --path . --headless --import --quit-after 1 || true

      - name: Linux Build
        run: |
          mkdir -v -p build/linux
          godot --headless --verbose --export-release "Desktop" build/linux/$EXPORT_NAME.x86_64

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: linux
          path: build/linux

  export-windows:
    name: Windows Export
    runs-on: ubuntu-22.04
    container:
      image: barichello/godot-ci:4.4.1
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          lfs: true

      - name: Setup
        run: |
          mkdir -v -p ~/.local/share/godot/export_templates/
          mv /root/.local/share/godot/export_templates/${GODOT_VERSION}.stable ~/.local/share/godot/export_templates/${GODOT_VERSION}.stable

      - name: Import project assets
        run: |
          godot --path . --headless --import --quit-after 1 || true

      - name: Windows Build
        run: |
          mkdir -v -p build/windows
          godot --headless --verbose --export-release "Windows Desktop" build/windows/$EXPORT_NAME.exe

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: windows
          path: build/windows

  export-web:
    name: Web Export
    runs-on: ubuntu-22.04
    container:
      image: barichello/godot-ci:4.4.1
    permissions:
      contents: read
      pages: write
      id-token: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          lfs: true

      - name: Setup
        run: |
          mkdir -v -p ~/.local/share/godot/export_templates/
          mv /root/.local/share/godot/export_templates/${GODOT_VERSION}.stable ~/.local/share/godot/export_templates/${GODOT_VERSION}.stable

      - name: Import project assets
        run: |
          godot --path . --headless --import --quit-after 1 || true

      - name: Web Build
        run: |
          mkdir -v -p build/web
          godot --headless --verbose --export-release "Web" build/web/index.html

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: web
          path: build/web

      - name: Setup Pages
        uses: actions/configure-pages@v4
        if: github.ref == 'refs/heads/main'

      - name: Upload to GitHub Pages
        uses: actions/upload-pages-artifact@v3
        if: github.ref == 'refs/heads/main'
        with:
          path: build/web

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
        if: github.ref == 'refs/heads/main'

  export-android:
    name: Android Export
    runs-on: ubuntu-22.04
    container:
      image: barichello/godot-ci:4.4.1
    env:
      GODOT_VERSION: 4.4.1
      EXPORT_NAME: continuum
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          lfs: true

      - name: Setup
        run: |
          mkdir -v -p ~/.local/share/godot/export_templates/
          mv /root/.local/share/godot/export_templates/${GODOT_VERSION}.stable ~/.local/share/godot/export_templates/${GODOT_VERSION}.stable

      - name: Install Android Build Template Libraries
        run: |
          mkdir -p android/libs/debug android/libs/release
          unzip -j ~/.local/share/godot/export_templates/${GODOT_VERSION}.stable/android_source.zip \
            "libs/debug/godot-lib.template_debug.aar" \
            -d android/libs/debug/
          unzip -j ~/.local/share/godot/export_templates/${GODOT_VERSION}.stable/android_source.zip \
            "libs/release/godot-lib.template_release.aar" \
            -d android/libs/release/

      - name: Import project assets
        run: |
          godot --path . --headless --import --quit-after 1 || true

      - name: Android Build
        run: |
          mkdir -v -p build/android
          godot --headless --verbose --export-debug "Android" build/android/$EXPORT_NAME.apk

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: android
          path: build/android

  create-release:
    name: Create Release
    runs-on: ubuntu-22.04
    if: startsWith(github.ref, 'refs/tags/v')
    needs: [export-linux, export-windows, export-web, export-android]
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download Linux Build
        uses: actions/download-artifact@v4
        with:
          name: linux
          path: ./artifacts/linux

      - name: Download Windows Build
        uses: actions/download-artifact@v4
        with:
          name: windows
          path: ./artifacts/windows

      - name: Download Web Build
        uses: actions/download-artifact@v4
        with:
          name: web
          path: ./artifacts/web

      - name: Download Android Build
        uses: actions/download-artifact@v4
        with:
          name: android
          path: ./artifacts/android

      - name: Create Release Archives
        run: |
          cd artifacts
          zip -r ../continuum-linux-${GITHUB_REF#refs/tags/}.zip linux/
          zip -r ../continuum-windows-${GITHUB_REF#refs/tags/}.zip windows/
          zip -r ../continuum-web-${GITHUB_REF#refs/tags/}.zip web/
          zip -r ../continuum-android-${GITHUB_REF#refs/tags/}.zip android/

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            continuum-linux-*.zip
            continuum-windows-*.zip
            continuum-web-*.zip
            continuum-android-*.zip
          body: |
            ## üéÆ Continuum Release ${GITHUB_REF#refs/tags/}

            **Professional vertical scrolling shmup built in Godot 4.4**

            ### üöÄ Play Options
            - **üåê Web**: [Play Online](https://stphung.github.io/continuum/) (Instant browser play)
            - **üêß Linux**: Download `continuum-linux-*.zip`
            - **ü™ü Windows**: Download `continuum-windows-*.zip`
            - **üì± Android**: Download `continuum-android-*.zip` (contains APK file)
            - **üåê Web Offline**: Download `continuum-web-*.zip` for local hosting

            ### ‚ú® Features
            - **Dual Weapon System**: Vulcan spread + Laser piercing with 5-level progression
            - **Zero-Dependency Audio**: All sounds generated programmatically
            - **Dynamic Difficulty**: Mathematical wave progression scaling
            - **Professional Architecture**: Clean code with comprehensive testing

            ### üéØ Controls
            - **Movement**: Arrow Keys or WASD
            - **Shoot**: Spacebar (automatic)
            - **Bomb**: Z key
            - **Pause**: Escape

            Built with modern game development practices and innovative technical solutions.
          draft: false
          prerelease: false